<?php

namespace ContainerMtXTdt5;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_B2lz4Y6Service extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.B2lz4Y6' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.B2lz4Y6'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'App\\Controller\\ClientController::delete' => ['privates', '.service_locator._sqIFxE', 'get_ServiceLocator_SqIFxEService', true],
            'App\\Controller\\ClientController::edit' => ['privates', '.service_locator._sqIFxE', 'get_ServiceLocator_SqIFxEService', true],
            'App\\Controller\\ClientController::show' => ['privates', '.service_locator._sqIFxE', 'get_ServiceLocator_SqIFxEService', true],
            'App\\Controller\\HaieController::delete' => ['privates', '.service_locator.xtyMFIP', 'get_ServiceLocator_XtyMFIPService', true],
            'App\\Controller\\HaieController::edit' => ['privates', '.service_locator.xtyMFIP', 'get_ServiceLocator_XtyMFIPService', true],
            'App\\Controller\\HaieController::show' => ['privates', '.service_locator.xtyMFIP', 'get_ServiceLocator_XtyMFIPService', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'App\\Kernel::terminate' => ['privates', '.service_locator.bRdave9', 'get_ServiceLocator_BRdave9Service', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel::terminate' => ['privates', '.service_locator.bRdave9', 'get_ServiceLocator_BRdave9Service', true],
            'App\\Controller\\ClientController:delete' => ['privates', '.service_locator._sqIFxE', 'get_ServiceLocator_SqIFxEService', true],
            'App\\Controller\\ClientController:edit' => ['privates', '.service_locator._sqIFxE', 'get_ServiceLocator_SqIFxEService', true],
            'App\\Controller\\ClientController:show' => ['privates', '.service_locator._sqIFxE', 'get_ServiceLocator_SqIFxEService', true],
            'App\\Controller\\HaieController:delete' => ['privates', '.service_locator.xtyMFIP', 'get_ServiceLocator_XtyMFIPService', true],
            'App\\Controller\\HaieController:edit' => ['privates', '.service_locator.xtyMFIP', 'get_ServiceLocator_XtyMFIPService', true],
            'App\\Controller\\HaieController:show' => ['privates', '.service_locator.xtyMFIP', 'get_ServiceLocator_XtyMFIPService', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel:terminate' => ['privates', '.service_locator.bRdave9', 'get_ServiceLocator_BRdave9Service', true],
        ], [
            'App\\Controller\\ClientController::delete' => '?',
            'App\\Controller\\ClientController::edit' => '?',
            'App\\Controller\\ClientController::show' => '?',
            'App\\Controller\\HaieController::delete' => '?',
            'App\\Controller\\HaieController::edit' => '?',
            'App\\Controller\\HaieController::show' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'App\\Kernel::terminate' => '?',
            'kernel::loadRoutes' => '?',
            'kernel::registerContainerConfiguration' => '?',
            'kernel::terminate' => '?',
            'App\\Controller\\ClientController:delete' => '?',
            'App\\Controller\\ClientController:edit' => '?',
            'App\\Controller\\ClientController:show' => '?',
            'App\\Controller\\HaieController:delete' => '?',
            'App\\Controller\\HaieController:edit' => '?',
            'App\\Controller\\HaieController:show' => '?',
            'kernel:loadRoutes' => '?',
            'kernel:registerContainerConfiguration' => '?',
            'kernel:terminate' => '?',
        ]);
    }
}
